require(coRdon)
require(seqinr)
require(pbmclapply)
require(pbmcapply)
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#reorder to match tree
#data<-exons[consensus.all.timetree$phy$tip.label,]
#convert to character vector
datachar<-as.character(data)
mtdna.GC<-pbmclapply((datachar), function(dat){GC(s2c(dat), exact=T)}, mc.cores = 4)
?pbmclapply
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
data
datachar<-as.character(data)
datachar
?GC
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#convert to character vector
datachar<-as.character(data)
?pbmclapply
getwd()
tempdir()
dir.create(tempdir())
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#convert to character vector
datachar<-as.character(data)
?pbmclapply
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#for some reason this wipes out R's temp directory. not sure what's going on now
#re create with:
dir.create(tempdir())
?GC
?readSet
?pbmclapply
#convert to character vector
datachar<-as.character(data)
>s2c
?s2c
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#for some reason this wipes out R's temp directory. not sure what's going on now
#re create with:
dir.create(tempdir())
#convert to character vector
datachar<-as.character(data)
#estimate GC content (exact method) in parallel
mtdna.GC<-pbmclapply((datachar), function(dat){GC(s2c(dat), exact=T)}, mc.cores = 4)
mtdna.GC
hist(log(mtdna.GC))
hist(log(unlist(mtdna.GC)))
hist((unlist(mtdna.GC)))
getwd()
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
setwd("/Users/cotinga/Downloads/mtdnatest/")
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#for some reason this wipes out R's temp directory. not sure what's going on now
#re create with:
dir.create(tempdir())
#convert to character vector
datachar<-as.character(data)
#estimate GC content (exact method) in parallel
mtdna.GC<-pbmclapply((datachar), function(dat){GC(s2c(dat), exact=T)}, mc.cores = 4)
hist((unlist(mtdna.GC)))
mtdna.GC.RDS<-saveRDS(mtdna.GC)
saveRDS(mtdna.GC, "mtdna.GC.RDS")
getwd()
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", sep = '\t')
LHT
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", sep = '\s')
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt")
LHT
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", header=F)
LHT
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", header=F, sep='\t')
LHT
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", header=F, sep='\u0020')
LHT
as.data.frame(mtdna.GC)
as.matrix(mtdna.GC)
#reformat mtdna.GC
mtdna.GC<-as.data.frame(as.matrix(mtdna.GC))
mtdna.GC
#estimate GC content (exact method) in parallel
mtdna.GC<-pbmclapply((datachar), function(dat){GC(s2c(dat), exact=T)}, mc.cores = 4)
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", header=F, sep='\u0020')
#reformat mtdna.GC
mtdna.GC<-as.matrix(mtdna.GC)
mtdna.GC
rownames(mtdna.GC)
LHT
rownames(mtdna.GC) == LHT$V1
GC_data<-cbind(LHT, mtdna.GC)
GC_data
GC_data$mtdna.GC
GC_data<-cbind(LHT, unlist(mtdna.GC))
GC_data
#fix names
colnames(GC_data)<-c("taxon", "mass", "mig_dist", "GC")
GC_data
#data frame conversion
as.data.frame(GC_data)
#data frame conversion
GC_data<-as.data.frame(GC_data)
rownames(GC_data) <- GC_data$taxon
#data frame conversion
GC_data<-as.data.frame(GC_data)
rownames(GC_data) <- GC_data$taxon
GC_data$taxon<-NULL
GC_data
#generate scatterplot matrix
library(psych)
cbind(GC_data, log(GC_data))
#add log scale (exploration)
GC_data_log<-cbind(GC_data, log(GC_data))
colnames(GC_data_log)<-c("mass", "mig_dist", "GC", "log.mass", "log.mig_dist", "log.GC")
GC_data_log
pairs.panels(GC_data_log,
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = F # show correlation ellipses
)
theta<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/NeRev_noheader.txt", header=F, sep='\u0020')
theta
theta<-theta[c("V1", "V4")]
theta
GC_data_log
theta
#need to match the row names bc these have some missing
theta$V1
theta$V1 %in% rownames(GC_data_log)
rownames(GC_data_log) %in% theta$V1
GC_data_log[rownames(GC_data_log) %in% theta$V1,]
#need to match the row names bc these have some missing
#solution, filter GC data to match the reduced set
GC_data_log.filter<-GC_data_log[rownames(GC_data_log) %in% theta$V1,]
rownames(GC_data_log.filter)
rownames(GC_data_log.filter) == theta$V1
theta
#append the theta data
GC_data_log.filter<-cbind(GC_data_log.filter, "theta"=theta$V4)
GC_data_log.filter
require(coRdon)
require(seqinr)
require(parallel)
require(pbmcapply)
setwd("/Users/cotinga/Downloads/mtdnatest/")
#read the data
data<-readSet(file="/Users/cotinga/Downloads/mtdnatest/fullmt.fasta.zip", zipped = TRUE)
#for some reason this wipes out R's temp directory. not sure what's going on now
#re create with:
dir.create(tempdir())
#convert to character vector
datachar<-as.character(data)
#estimate GC content (exact method) in parallel
mtdna.GC<-pbmclapply((datachar), function(dat){GC(s2c(dat), exact=T)}, mc.cores = 4)
hist((unlist(mtdna.GC)))
#reading in mass and migration distance data
LHT<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/fullmt_noheader.txt", header=F, sep='\u0020')
#reformat mtdna.GC
mtdna.GC<-as.matrix(mtdna.GC)
#checking order of row names
rownames(mtdna.GC) == LHT$V1
#checks out
#create combined dataset
GC_data<-cbind(LHT, unlist(mtdna.GC))
#fix names
colnames(GC_data)<-c("taxon", "mass", "mig_dist", "GC")
#data frame conversion
GC_data<-as.data.frame(GC_data)
rownames(GC_data) <- GC_data$taxon
GC_data$taxon<-NULL
#add log scale (exploration)
GC_data_log<-cbind(GC_data, log(GC_data))
colnames(GC_data_log)<-c("mass", "mig_dist", "GC", "log.mass", "log.mig_dist", "log.GC")
#add mt theta
theta<- read.csv(file="/Users/cotinga/Downloads/mtdnatest/NeRev_noheader.txt", header=F, sep='\u0020')
theta<-theta[c("V1", "V4")]
GC_data_log.filter<-GC_data_log[rownames(GC_data_log) %in% theta$V1,]
#check the taxon names
rownames(GC_data_log.filter) == theta$V1
#looks ok
#append the theta data
GC_data_log.filter<-cbind(GC_data_log.filter, "theta"=theta$V4, "log.theta"=log(theta$V4))
GC_data_log.filter
#generate scatterplot matrix
library(psych)
pairs.panels(GC_data_log,
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = F # show correlation ellipses
)
pairs.panels(GC_data_log.filter,
method = "pearson", # correlation method
hist.col = "#00AFBB",
density = TRUE,  # show density plots
ellipses = F # show correlation ellipses
)
